<?php

namespace App\Controller;

use App\Controller\AppController;

class ArticlesController extends AppController
{
    /**
     * @throws \Exception
     */
    public function initialize(): void
    {
        $this->loadComponent('Paginator');
        $this->loadComponent('Flash');
        parent::initialize(); // TODO: Change the autogenerated stub
    }

    /**
     * @throws \Exception
     */
    public function index(): void
    {

        $articles = $this->Paginator->paginate($this->Articles->find());
        $this->set(compact('articles'));
    }

    public function view(string $slug = null)
    {
        $article = $this->Articles->findBySlug($slug)->firstOrFail();
        $this->set(compact('article'));
    }

    public function add()
    {
        $article = $this->Articles->newEmptyEntity();
        if($this->request->is('post')){
            $article = $this->Articles->patchEntity($article, $this->request->getData());
            $article->user_id = 1;
            if($this->Articles->save($article)){
                $this->Flash->success(__("You article has been saved."));
                return $this->redirect(['action' => 'index']);
            }
            $this->Flash->error(__('Unable to add your article.'));
        }
        $this->set(compact('article'));
    }

    public function edit(string $slug = null)
    {
        $article = $this->Articles->findBySlug($slug)->firstOrFail();
        if($this->request->is(['post', 'put'])){
            $this->Articles->patchEntity($article, $this->request->getData());
            $article->user_id = 1;
            if($this->Articles->save($article)){
                $this->Flash->success(__("You article has been updated."));
                return $this->redirect(['action' => 'index']);
            }
            $this->Flash->error(__('Unable to update your article.'));
        }
        $this->set('article', $article);
    }

    public function delete(string $slug = null)
    {
        $this->request->allowMethod(['post', 'delete']);
        $article = $this->Articles->findBySlug($slug)->firstOrFail();
        if($this->Articles->delete($article)){
            $this->Flash->success(__('The {0} article has been deleted.', $article->title));
            return $this->redirect(['action' => 'index']);
        }
    }
}
